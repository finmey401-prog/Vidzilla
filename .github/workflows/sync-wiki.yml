name: 📚 Sync Wiki Documentation

on:
  push:
    branches: [ main ]
    paths: [ 'wiki/**' ]
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if no changes detected'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  sync-wiki:
    runs-on: ubuntu-latest
    name: 🔄 Sync Wiki Pages
    
    steps:
      - name: 📥 Checkout main repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔍 Check if wiki directory exists
        run: |
          if [ ! -d "wiki" ]; then
            echo "❌ Wiki directory not found"
            exit 1
          fi
          echo "✅ Wiki directory found"
          echo "📊 Wiki files: $(find wiki -name "*.md" | wc -l)"

      - name: 📥 Checkout Wiki repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki-repo
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: 🆕 Initialize Wiki if not exists
        if: failure()
        run: |
          echo "🆕 Wiki repository doesn't exist, creating..."
          mkdir -p wiki-repo
          cd wiki-repo
          git init
          git remote add origin https://github.com/${{ github.repository }}.wiki.git
          
          # Create initial commit
          echo "# Welcome to Vidzilla Wiki" > Home.md
          echo "" >> Home.md
          echo "This wiki is automatically synced from the main repository." >> Home.md
          
          git config user.name 'wiki-sync-bot'
          git config user.email 'wiki-sync-bot@users.noreply.github.com'
          git add Home.md
          git commit -m "🎉 Initialize wiki repository"
          git push -u origin master

      - name: ⚙️ Configure Git
        run: |
          cd wiki-repo
          git config user.name 'wiki-sync-bot'
          git config user.email 'wiki-sync-bot@users.noreply.github.com'

      - name: 📋 Sync Wiki content
        run: |
          echo "📋 Copying wiki files..."
          
          # Copy all markdown files
          cp wiki/*.md wiki-repo/ 2>/dev/null || {
            echo "❌ No markdown files found in wiki directory"
            exit 1
          }
          
          cd wiki-repo
          
          echo "📊 Files in wiki repository:"
          ls -la *.md

      - name: 🧭 Create navigation and metadata
        run: |
          cd wiki-repo
          
          # Create enhanced sidebar
          cat > _Sidebar.md << 'EOF'
          ## 📚 Vidzilla Wiki
          
          ### 👥 For Users
          * [🏠 **Home**](Home)
          * [🚀 Quick Start](Quick-Start-Guide)
          * [🎯 Supported Platforms](Supported-Platforms)
          * [❓ FAQ](FAQ)
          
          ### 👨‍💻 For Developers
          * [🛠️ Installation Guide](Installation-Guide)
          * [🏗️ Architecture Overview](Architecture-Overview)
          
          ### 🔗 Quick Links
          * [📋 Repository](https://github.com/${{ github.repository }})
          * [🐛 Report Bug](https://github.com/${{ github.repository }}/issues/new)
          * [💬 Discussions](https://github.com/${{ github.repository }}/discussions)
          * [📊 Actions](https://github.com/${{ github.repository }}/actions)
          
          ---
          
          ### 📈 Stats
          * **Pages:** $(find . -name "*.md" -not -name "_*" | wc -l)
          * **Last Sync:** $(date '+%Y-%m-%d %H:%M UTC')
          
          ---
          *🤖 Auto-generated navigation*
          EOF
          
          # Create enhanced footer
          cat > _Footer.md << 'EOF'
          ---
          
          ### 📚 Documentation Info
          
          | Info | Value |
          |------|-------|
          | 📅 **Last Updated** | $(date '+%Y-%m-%d %H:%M:%S UTC') |
          | 🤖 **Sync Method** | Automated via GitHub Actions |
          | 📝 **Source** | [wiki/ directory](https://github.com/${{ github.repository }}/tree/main/wiki) |
          | ✏️ **Edit** | [Improve documentation](https://github.com/${{ github.repository }}/tree/main/wiki) |
          | 🐛 **Issues** | [Report problems](https://github.com/${{ github.repository }}/issues/new) |
          
          ---
          
          **🎯 Vidzilla** - Social Media Video Downloader Bot  
          ⭐ [Star us on GitHub](https://github.com/${{ github.repository }}) if you find this useful!
          EOF

      - name: 🔍 Check for changes
        id: changes
        run: |
          cd wiki-repo
          
          if [[ -n $(git status --porcelain) ]] || [[ "${{ github.event.inputs.force_sync }}" == "true" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected or force sync requested"
            
            # Show what changed
            echo "📝 Changed files:"
            git status --porcelain
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes detected"
          fi

      - name: 📤 Commit and push changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          cd wiki-repo
          
          # Add all files
          git add .
          
          # Create detailed commit message
          CHANGED_FILES=$(git diff --cached --name-only | tr '\n' ', ' | sed 's/,$//')
          
          cat > commit_message.txt << EOF
          📚 Auto-sync wiki documentation
          
          🔄 **Sync Details:**
          - **Trigger:** ${{ github.event_name }}
          - **Branch:** ${{ github.ref_name }}
          - **Commit:** ${{ github.sha }}
          - **Time:** $(date '+%Y-%m-%d %H:%M:%S UTC')
          
          📝 **Updated Files:** $CHANGED_FILES
          
          🤖 Automatically synced from main repository
          EOF
          
          # Commit with detailed message
          git commit -F commit_message.txt
          
          # Push changes
          echo "📤 Pushing to GitHub Wiki..."
          git push origin master || git push origin main
          
          echo "✅ Wiki updated successfully!"

      - name: 📊 Generate sync report
        if: always()
        run: |
          echo "## 📚 Wiki Sync Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| 📅 Sync Time | $(date '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔄 Trigger | ${{ github.event_name }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 📝 Wiki Pages | $(find wiki -name "*.md" | wc -l) |" >> $GITHUB_STEP_SUMMARY
          echo "| 📊 Total Size | $(du -sh wiki | cut -f1) |" >> $GITHUB_STEP_SUMMARY
          echo "| ✅ Status | ${{ job.status }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **View Wiki:** https://github.com/${{ github.repository }}/wiki" >> $GITHUB_STEP_SUMMARY

      - name: 🎉 Success notification
        if: success() && steps.changes.outputs.changes == 'true'
        run: |
          echo "🎉 Wiki sync completed successfully!"
          echo "🌐 View updated wiki at: https://github.com/${{ github.repository }}/wiki"