version: '3.8'

services:
  vidzilla:
    build: .
    container_name: vidzilla-bot
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./temp_videos:/app/temp_videos
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - vidzilla-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7.0
    container_name: vidzilla-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME:-vidzilla}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - vidzilla-network

  redis:
    image: redis:7.2-alpine
    container_name: vidzilla-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vidzilla-network

  nginx:
    image: nginx:alpine
    container_name: vidzilla-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - vidzilla
    networks:
      - vidzilla-network

  watchtower:
    image: containrrr/watchtower
    container_name: vidzilla-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
    networks:
      - vidzilla-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  vidzilla-network:
    driver: bridge